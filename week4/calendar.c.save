//*****************************************
/* Program to print a requested calendar.
*  By: FSH
*  variables used:
*  strings: months
*  int: date, month, year
*  int functions: first_day_years, first_day_month, days_month, leap_year,
*                 display_header, display_grid
*/
//*****************************************

#include <cs50.h>
#include <ctype.h>
#include <stdio.h>
#include <string.h>
#include <stdlib.h>

int DAYS = 0;
int COUNT_YEAR = 1800;

void days_years(int year);
void days_months(int month, int year);
int leap_year(int year);
int start_day(int dag);
void draw_days(int row, int column);

void display_header(int month, int year);
void display_grid(int dag);
void display_week(void);

string WEEK[7] = {"Sun","Mon","Tue","Wed","Thu","Fri","Sat"};

int main (int argc, string argv[])
{
	// if the user didn't provide month and year, inform them
	if (argc !=3)
	{
		printf("Usage: ./calendar month year\n");
		return 1;
	}
	// change the argv string to an month and year integer !!MOET HIER BIJ CIJFER CHECK?!!
	int month = atoi(argv[1]);
	int year = atoi(argv[2]);

	days_years(year);
	days_months(month, year);
//	printf("%i\n", DAYS);
//	printf("%s\n", WEEK[6]);
//int r = 0;
//int c = 0;
//int r_m = 6;
//int c_m = 7;
//int d = 0;
//int d_m = 31;

//for (r = 0; r < r_m; r++)
//{
//    for (c = 0; c < c_m; c++)
//    {
//       printf("%3d ", d);
//       d++;
//    }
//    c = 0;
//    printf("\n");
//}


	display_header(month, year);
//	display_week();
	display_grid(DAYS);

//Tel aantal jaren tussen 1800 en year
//bereken hoeveel schrikkeljaren er tussen 1800 en year zitten. tel voor elk jaar er 1 bij de dagen tenzij huidige maand <2
// komt voor als het jaartal restloos deelbaar is door 4, maar niet door 100 â€“ tenzij het jaartal restloos deelbaar door 400

//loop over dagen vd week tot aantal DAYS.
}

// bereken dagen van tussenliggende jaren rekening houdend met schrikkeljaren
void days_years(int year)
{
	for (COUNT_YEAR = 1800; COUNT_YEAR < year; COUNT_YEAR++)
	{
		if(leap_year(year))
		{
			DAYS = DAYS + 366;
		}
		else
		{
			DAYS = DAYS + 365;
		}
//		if (COUNT_YEAR%4 == 0 && COUNT_YEAR%100 != 0)
//		{
//			if (COUNT_YEAR%400 == 0)
//			{
//				DAYS = DAYS + 366;
//			}
//			else
//			{
  //                      	DAYS = DAYS + 365;
//	                }
//		}
//		else
//		{
//			DAYS = DAYS + 365;
//		}
	}
}

void days_months(int month, int year)
{
	for (int count_month = 0; count_month <= month; count_month++)
	{
		if(count_month == 1 || count_month == 3 || count_month == 5 || count_month == 7 || count_month == 8 || count_month == 10 || count_month == 12)
		{
			DAYS = DAYS + 31;
		}
		else if (count_month == 2 || count_month == 4 || count_month == 6 || count_month == 9 || count_month == 11)
		{
			DAYS = DAYS + 30;
		}

		if (leap_year(year) && month >= 2)
		{
			DAYS = DAYS + 1;
		}
	}
//	printf("Days: %i\n", DAYS);
}

int leap_year(int year)
{
	//is huidig jaar een leap year en >= 2month
	if (COUNT_YEAR%4 == 0 && COUNT_YEAR%100 != 0)
        {
                if (COUNT_YEAR%400 == 0)
                {
			return 1;
		}
	}
	return 0;
}

void display_header(int month, int year)
{
        string months[12] = {"Jan,Feb,Mrt,Apr,May,Jun,Jul,Aug,Sep,Okt,Nov,Dec"};
        printf("      %s %i\n", months[month], year);
	printf("---------------------------\n");
        printf("%s %s %s %s %s %s %s \n", WEEK[0], WEEK[1], WEEK[2], WEEK[3], WEEK[4], WEEK[5], WEEK[6]);
}

int start_day(int dag)
{
	int dagen = DAYS;
	if (dagen > 4){
		while (dagen < 700){
			dagen = dagen - 700;
		}
		while (dagen < 70){
			dagen = dagen - 70;
		}
		while (dagen < 7){
			dagen = dagen -7;
		}
		//return dagen-1;
	}
	else {
		printf("dagen: %i\n", dagen);
		dagen = dagen-1;
	}
	return dagen;
}


void display_grid(int dag)
{
	int day = 1;
	if (start_day(DAYS) == 0)
	{
		for (int row = 0; row < 6; row++){
			for (int column = 0; column < 6; column++){
				printf("%3d ",day);
			}
		}
	}
	else if (start_day(DAYS) == 1)
        {
                for (int row = 0; row < 6; row++){
                        for (int column = 0; column < 6; column++){
				if (column == 0 && row == 0){
					printf("    ");
				}
				else {
					printf("%3d ",day);
				}
                        }
                }
        }

	else if (start_day(DAYS) == 2)
        {
                for (int row = 0; row < 6; row++){
                        for (int column = 0; column < 6; column++){
                                if (column < 2 && row < 0){
                                        printf("    ");
                                }
                                else {
                                        printf("%3d ",day);
                                }
                        }
                }
        }

        else if (start_day(DAYS) == 2)
        {
                for (int row = 0; row < 6; row++){
                        for (int column = 0; column < 6; column++){
                                if (column < 2 && row < 0){
                                        printf("    ");
                                }
                                else {
                                        printf("%3d ",day);
                                }
                        }
                }
        }

        else if (start_day(DAYS) == 3)
        {
                for (int row = 0; row < 6; row++){
                        for (int column = 0; column < 6; column++){
                                if (column < 3 && row < 0){
                                        printf("    ");
                                }
                                else {
                                        printf("%3d ",day);
                                }
                        }
                }
        }

        else if (start_day(DAYS) == 4)
        {
                for (int row = 0; row < 6; row++){
                        for (int column = 0; column < 6; column++){
                                if (column < 4 && row < 0){
                                        printf("    ");
                                }
                                else {
                                        printf("%3d ",day);
                                }
                        }
                }
        }

        else if (start_day(DAYS) == 5)
        {
                for (int row = 0; row < 6; row++){
                        for (int column = 0; column < 6; column++){
                                if (column < 5 && row < 0){
                                        printf("    ");
                                }
                                else {
                                        printf("%3d ",day);
                                }
                        }
                }
        }

        else if (start_day(DAYS) == 6)
        {
                for (int row = 0; row < 6; row++){
                        for (int column = 0; column < 6; column++){
                                if (column < 6 && row < 0){
                                        printf("    ");
                                }
                                else {
                                        printf("%3d ",day);
                                }
                        }
                }
        }


}

//void draw_days(int row, int column)
//{
//	while (start_day(DAYS) != column){
//		printf("    ")
//	}
//	int day = 1;
//	printf("%3d ", day);
//}

